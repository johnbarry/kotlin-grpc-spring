// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
import "google/protobuf/timestamp.proto";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc sayHello (HelloRequest) returns (HelloReply) {}
  rpc backPressureDemo(BackPressureDemoRequest) returns (stream ANumber) {}
}

service FriendService {
  rpc generateTestData (Empty) returns (Empty) {}
  rpc listPeopleChanges (Empty) returns (stream PersonChange) {}
  rpc peopleChangeEvents (Empty) returns (stream PersonChangeEvent) {}
  rpc changeCallback(PersonChangeEvent) returns (PersonChange) {}

  rpc listPeople (Empty) returns (stream Person) {}
  rpc getPerson(PersonId) returns (Person) {}

  rpc requestFriend(FriendRequest) returns (NewFriendCommand) {}
  rpc makeFriend(NewFriendCommand) returns (NewFriendshipEvent) {}
  rpc friendCommands(EventStreamRequest) returns (stream NewFriendCommand) {}
  rpc makeOutstandingFriends(EventStreamRequest) returns (stream NewFriendshipEvent) {}
}

message ANumber {
  uint32 number = 1;
  repeated string filler = 2;
}

message BackPressureDemoRequest {
  uint32 number = 1;
  bool addFiller = 2;
}

message PersonId {
  uint64 id = 1;
}

message Person {
  uint64 id = 6;
  string forename = 1;
  string surname = 2;
  string addressLine1 = 3;
  string addressLine2 = 4;
  string city = 5;
}

message PersonChange {
  string changeId = 1;
  uint64 version = 2;
  Person person = 3;
  enum Operation {
    UNKNOWN = 0;
    CREATE = 1;
    UPDATE = 2;
    DELETE = 3;
  }
  Operation operation = 4;
}

message PersonChangeEvent {
  string changeId = 1;
  uint64 id = 2;
  PersonChange.Operation operation = 3;
}

message FriendListRequest {

}

message Empty {}

message EventStreamRequest {}

message FriendRequest {
  Person firstPerson = 1;
  Person secondPerson = 2;
  int64 kafkaOffset = 3;
}

message NewFriendCommand {
  string key = 1;
  Person firstPerson = 2;
  Person secondPerson = 3;
  int64 kafkaOffset = 4;
}

message NewFriendshipEvent {
  Person firstPerson = 1;
  Person secondPerson = 2;
  google.protobuf.Timestamp dated = 3;
  int64 kafkaOffset = 4;
}

message  FriendReply {
  Person person = 1;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
